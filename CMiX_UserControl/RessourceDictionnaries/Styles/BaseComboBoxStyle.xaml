<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CMiX">
    <ControlTemplate x:Key="BaseComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>

            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="True"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border
                    x:Name="DropDownBorder"
                    Background="{DynamicResource BaseColor}"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="OpaqueRect"
                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle
                                                    Margin="0"
                                                    SnapsToDevicePixels="True"
                                                    Stroke="White"
                                                    StrokeThickness="1" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Focusable" Value="True" />
                        <Setter Property="ClickMode" Value="Press" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        x:Name="templateRoot"
                                        Margin="0"
                                        Background="{DynamicResource BaseColor}"
                                        SnapsToDevicePixels="True">
                                        <Border
                                            x:Name="splitBorder"
                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                            Margin="0"
                                            HorizontalAlignment="Right"
                                            BorderBrush="Transparent"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                            <Path
                                                x:Name="Arrow"
                                                Margin="0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                Fill="{DynamicResource BaseText}" />
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFABADB3" />
                                            <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ActiveText}" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource BaseLightColor}" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource BaseLightColor}" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Arrow" Property="Fill" Value="White" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource BaseColor}" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource BaseColor}" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
                                            <Setter TargetName="splitBorder" Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Offset="0" Color="#FFDAEBFC" />
                                                        <GradientStop Offset="1" Color="#FFC4E0FC" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="#FF569DE5" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Arrow" Property="Fill" Value="#FFBFBFBF" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="#FFF0F0F0" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFD9D9D9" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFBFBFBF" />
                                            <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    IsHitTestVisible="False"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextElement.Foreground="{DynamicResource BaseText}" />
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>-->
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <!--<Condition>
                        <Condition.Value>
                            <System:Boolean>False</System:Boolean>
                        </Condition.Value>
                    </Condition>-->
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>